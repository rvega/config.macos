# ctrl-a as the default prefix, use OS settings to bind capslock to ctrl
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Vim-like keybindings
set-window-option -g mode-keys vi
unbind [
bind-key a copy-mode
bind-key p paste-buffer
bind-key / copy-mode \; send-key ?
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi Escape send -X cancel

# Copy to system clipboard (works after selecting with y)
# bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe 'xclip -in -selection clipboard'

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-a h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-a j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-a k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-a l"  "select-pane -R"

# Neovim wants this to make escape key work as they expect
set-option -sg escape-time 10

bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R
bind-key s split-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# Windows
bind-key t new-window -c '#{pane_current_path}'

# Mouse
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Status bar colors
set -g status off
# set -g status-bg colour234
# set -g pane-border-style fg=colour234
# set -g pane-active-border-style fg=colour242
# set-option -g status-fg colour246

# Large scroll history. Don't make it absurdly large, memory is preallocated.
set -g history-limit 100000

# Set $TERM variable to the same value as gnome-terminal does. 
# This fixes some color issues
set -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"
# For older versions of tmux (before 3.2)
# set -ga terminal-overrides ",xterm-256color*:Tc"



# Neovim wants this to use tmux's clipboard
set -g focus-events on

# Under mac os, we want stuff like C-a, C-h, etc. to be mapped to 
# Command-a, Command-h, etc. To achieve this, you can set iTerm2 to 
# send hex codes as described in http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
# Also look at http://ascii-table.com/control-chars.php
# The ones I configured are: 
# Command+a -> 0x01

# I once needed this, looks like not any more. Commenting out
# Tmux and mac os clipboard integration.
# More info at http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x
# you need to brew install reattach-to-user-namespace
# set-option -g default-command "reattach-to-user-namespace -l zsh"

