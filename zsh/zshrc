# Load zgen
source "${HOME}/Config/zsh/zgen/zgen.zsh"

# check if there's no init.zsh script
if ! zgen saved; then
    # plugins
    zgen oh-my-zsh
    zgen oh-my-zsh plugins/vi-mode
    zgen oh-my-zsh plugins/git
    zgen oh-my-zsh plugins/command-not-found
    zgen oh-my-zsh plugins/colored-man-pages
    zgen oh-my-zsh plugins/extract
    zgen load zsh-users/zsh-syntax-highlighting
    zgen load ytakahashi/igit

    # theme
    zgen load ${HOME}/Config/zsh/rafa.zsh-theme

    # save all to init script
    zgen save
fi

# Vim style key bindings
bindkey -v
bindkey "fd" vi-cmd-mode

# Forward delete in normal and insert mode
bindkey -a '^[[3~' delete-char
bindkey '^[[3~' delete-char

# Shift tab
bindkey -M menuselect '^[[Z' reverse-menu-complete

# Auto correct
setopt correct

# Switch keyboard layouts when opening a new terminal
#if [ -z "$TMUX" ]; then xdotool keydown Super key space keyup Super; fi

# Don't keep duplicates in zsh history
setopt HIST_IGNORE_ALL_DUPS

###################################################################

# Use Fuzzy Finder to find files/directories with ctrl+t, command history with
# ctrl+r and fuzzy cd command with alt+c https://github.com/junegunn/fzf 
# Maybe enable this: https://github.com/Aloxaf/fzf-tab
export FZF_COMPLETION_TRIGGER="**"
export FZF_DEFAULT_COMMAND='rg --files --follow --hidden --color=never 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
source ~/.fzf.zsh
bindkey "รง" fzf-cd-widget


###################################################################

# export PHP_CS_FIXER_IGNORE_ENV=1

###################################################################

# PATH

# BUILDROOT_BIN="/home/Rafa/Projects/Active/OuterSpaceSounds/projects/mostro/repos/mostro/linux-filesystem/buildroot/output/host/bin/"
# SNAP_BIN="/snap/bin" 
# LOCAL_BIN="${HOME}/.local/bin" 
# COMPOSER_BIN="${HOME}/.config/composer/vendor/bin"
# export PATH=$PATH:${SNAP_BIN}:${LOCAL_BIN}:${BUILDROOT_BIN}:${COMPOSER_BIN}

# Training wheels for <alt>-c
# alias cd="echo 'Use <alt>-c instead of cd!' && cd "

# clear 
alias c="clear"

# lf file manager
alias lf1="=lf"
alias lf="tmux-load ~/Config/lf/tmux-lf.json"

# Alias for cmake in debug and ninja mode
alias cmake_ninja="cmake -G Ninja -DCMAKE_BUILD_TYPE=debug"

# send to trash instead of rm (need to install trash-cli from aur)
alias rm=trash

# Force ninja to output colors
export CLICOLOR_FORCE=1

# Alias for gnome-open
# alias open='xdg-open'

# Macos weirdness of open command within tmux.
alias open='reattach-to-user-namespace open'

# Warning for pip
# alias pip='echo "use pip with --user flag."'

# Copy to "clipboard" and not "selection" from xclip command
# alias xclip='xclip -selection clipboard'

# Prevent sudo timeout when installing stuff with yay
# alias yay='yay --sudoloop'

# Render a markdown file to html, you need to `pacman -S python-grip`
# alias md2html='grip -b' # Preview server
# alias md2html_export='grip --export' # Actually export a html file

# Set colors for shell
# BASE16_SHELL="~/Config/zsh/base16-shell/scripts/base16-atelier-forest.sh"
# [[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

# Alias for du (disk usage)
alias du="du -sk (*|.*) | sort -rn | awk '{\$1=\"\"; print \$0}' | xargs du -hs"

## dcfldd is frendlier than dd
## alias dd=dcfldd

# ripgrep use smart case
alias rg="rg -S"

# mv and cp prompt before overwriting
alias mv="mv -i"
alias cp="cp -i"

# Git merge ignoring whitespace
alias gms='git merge -s recursive -Xignore-space-change'

# Git log
alias glg='git log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative'

# Git show log all branches
alias glga='glg --branches'

# Git diff 
alias gd='git difftool'

# Vim diff
alias vimdiff='=nvim -d'

# Directoyr listings
alias ll='ls -alh'
alias l='ls'

# Find hidden files and follow simlinks
function fnd () {
  fd -H -L $1
}

# Tree
alias t='tree -L 2 -C'
alias tt='tree -L 3 -C'
alias ttt='tree -C | less' 

# Vim open on same window
# alias nvim='~/Config/neovim/open-with-neovim.sh' 
# alias vim='~/Config/neovim/open-with-neovim.sh' 
# alias vi='~/Config/neovim/open-with-neovim.sh'
alias vim='echo "Just type v instead of vim"'
alias v='~/Config/neovim/open-with-neovim.sh'
alias vv='=nvim'

# Use vim for everything
export EDITOR="nvim"

# Close session easily
alias qq="exit"

# Tmux and tmuxp stuff
export DISABLE_AUTO_TITLE='true'
alias tmux="tmux -2 -u attach || tmux -2 -u new"
alias tmux-save="tmuxp freeze"
alias tmux-load="tmuxp load"

# Nethog
# alias nethogs="sudo nethogs wlp5s0"

# Mount writable by users
# alias mountuser="sudo mount -o gid=storage,fmask=113,dmask=002"

# Use pigz instead of gzip
# alias gzip=pigz

# VI File Manager
# alias vifm='vifm .'

# I keep typing gs by mistake.
# alias gs='echo "Type =gs if you want to use ghostscript"'

# Fire up the OneRPM devel environment.
# alias onerpmdevel='cd ~/OneRPM/repos &&  print -n -- "\e]2; OneRPM \a" && tmux-load tmux.json'

# Do not line wrap when using less
export LESS=-RS

# Tell make to use parallelism for faster builds
export NUMCPUS=10
export MAKEFLAGS="-j$((NUMCPUS))"


# When using pipenv, install dependencies in project dir
export PIPENV_VENV_IN_PROJECT=1

# Prevent ctrl+s to do that weird thing it does
# http://raamdev.com/2007/recovering-from-ctrls-in-putty/
# stty ixany
# stty ixoff -ixon

# Node version manager
# source /usr/share/nvm/init-nvm.sh

# For automatic version switching with .nvmrc files in project directories.
# https://github.com/nvm-sh/nvm/blob/master/README.md#installing-and-updating
# autoload -U add-zsh-hook
# load-nvmrc() {
#   local node_version="$(nvm version)"
#   local nvmrc_path="$(nvm_find_nvmrc)"

#   if [ -n "$nvmrc_path" ]; then
#     local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

#     if [ "$nvmrc_node_version" = "N/A" ]; then
#       nvm install
#     elif [ "$nvmrc_node_version" != "$node_version" ]; then
#       nvm use
#     fi
#   elif [ "$node_version" != "$(nvm version default)" ]; then
#     echo "Reverting to nvm default version"
#     nvm use default
#   fi
# }
# add-zsh-hook chpwd load-nvmrc
# load-nvmrc

# Ruby version manager and rubygems 
# export PATH="$HOME/.rvm/bin:$HOME/.gem/ruby/3.0.0/bin:$PATH"
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 

