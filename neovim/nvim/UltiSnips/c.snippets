priority -40

snippet head "header file (rvg)"
#ifndef ${1:NAME}_H
#define $1_H

#ifdef __cplusplus
extern "C" {
#endif

${0:/* ... */ }

#ifdef __cplusplus
}
#endif

#endif /* $1 */
endsnippet

snippet inc "include (rvg)"
#include "$0"
endsnippet

snippet incl "include (rvg)"
#include <$0>
endsnippet

snippet main "main (rvg)"
int main(int argc, char** argv) {
	(void)argc;
	(void)argv;
	$0
	return 0;
}
endsnippet

snippet debug "debug (rvg)"
debug("${1:%s}", ${2:"Hello"});
endsnippet

snippet funptr "function pointer typedef (rvg)"
typedef ${1:void} ${2:function_name}(${3:void});
endsnippet

snippet fun "function (rvg)"
${4:static }${1:void} ${2:function_name}(${3:void}) {

	${0:return 0;}
}
endsnippet

snippet for "for loop (rvg)"
for(uint ${2:i}=0; $2<${1:n}; ${3:++$2}) {
	${VISUAL}$0
}
endsnippet

snippet struct "typedef struct (rvg)"
struct $1 {
	${0:/* fileds */};
};
typedef struct ${1:name} $1;
endsnippet

snippet enum "typedef enum (rvg)"
enum $1 {
	${0:/* items */}, 
};
typedef enum ${1:name} $1;
endsnippet

snippet new "constructor (rvg)"
$1* $1_new() { 
	$1* x = malloc(sizeof(${1:name}));
	if (!x) { return NULLPTR; }

	${0:/* stuff */}
	return x;
};
endsnippet

snippet X "X macro (rvg)"
X(${1:name}, "$1")
endsnippet

# vim:ft=snippets:
